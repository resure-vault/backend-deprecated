version: '3.8'

services:
  resure-postgres:
    image: postgres:16.2-alpine
    container_name: resure-postgres
    restart: always
    ports:
      - "127.0.0.1:${PROD_DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${PROD_DB_USER:-resure}
      POSTGRES_PASSWORD: ${PROD_DB_PASSWORD:-notsecured}
      POSTGRES_DB: ${PROD_DB_NAME:-sm}
    volumes:
      - resure-postgres:/var/lib/postgresql/resure/data
    networks:
      - resure-network

  resure-redis:
    image: redis:7.2-alpine
    container_name: resure-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-notsecured}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - resure-redis:/resure/data
    networks:
      - resure-network

  resure-app:
    build:
      context: ${APP_BUILD_CONTEXT:-..}  # default to parent directory
      dockerfile: ${APP_DOCKERFILE:-docker/Dockerfile}  # path relative to context
    container_name: resure-app
    restart: always
    ports:
      - "${PORT:-8080}:8080"
    environment:
      PROD_DB_HOST: resure-postgres
      PROD_DB_PORT: 5432
      PROD_DB_NAME: ${PROD_DB_NAME:-sm}
      PROD_DB_USER: ${PROD_DB_USER:-resure}
      PROD_DB_PASSWORD: ${PROD_DB_PASSWORD:-notsecured}
      JWT_SECRET: ${JWT_SECRET:-your-very-secure-jwt-secret-change-this}
      PORT: ${PORT:-8080}
      GIN_MODE: ${GIN_MODE:-debug}
      REDIS_URL: ${REDIS_URL:-redis://resure-redis:6379}
      REDIS_HOST: resure-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-notsecured}
      REDIS_DB: ${REDIS_DB:-0}
    depends_on:
      - resure-postgres
      - resure-redis
    networks:
      - resure-network

networks:
  resure-network:
    name: resure-network
    driver: bridge
    external: false

volumes:
  resure-postgres:
  resure-redis:
